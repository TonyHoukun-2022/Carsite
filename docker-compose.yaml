#  setting up a PostgreSQL database container
services:
  # defines a service named postgres (for AuctionService)
  postgres:
    image: postgres
    environment:
      - POSTGRES_PASSWORD=lp1dxing
    # Maps port 5432 of the host machine to port 5432 of the PostgreSQL container. This allows you to connect to the PostgreSQL database using port 5432 on the host machine.
    # external: internal
    ports:
      - 5432:5432
    volumes:
      # Mounts a volume named pgdata to the container's /var/lib/postgresql/data directory.
      # - pgdata:/var/lib/postgresql/data

      #anonymous vol
      # delete container will delete associated data
      - /var/lib/postgresql/data
  mongodb:
    image: mongo
    environment:
      - MONGO_INITDB_ROOT_USERNAME=root
      - MONGO_INITDB_ROOT_PASSWORD=lp1dxing
    ports:
      - 27017:27017
    volumes:
      - /var/lib/mongodb/data
      # - mongodata:/var/lib/mongodb/data
  # for async communications btw services
  rabbitMq:
    # lightweight version of RabbitMQ that includes the management plugin for easier monitoring and management.
    image: rabbitmq:3-management-alpine
    # host machine port:container port
    ports:
      - 5672:5672
      #  Port 15672 is the default port for the RabbitMQ management plugin. This allows you to access the RabbitMQ management console through a web browser by navigating to http://localhost:15672.
      - 15672:15672
#  This section defines Docker volumes that can be used by services (for name volumes)
# volumes:
#   pgdata:
#   mongodata:
